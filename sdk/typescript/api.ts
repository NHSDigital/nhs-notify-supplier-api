/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * NHS Notify Supplier API
 * API for communication suppliers to integrate with NHS Notify
 * OpenAPI spec version: 0.0.1
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  LetterBatchUpdateData,
  LetterStatuData,
  LetterUpdateData,
  LettersResponse
} from './types';

export const getNHSNotifySupplierAPI = () => {
/**
 * @summary Retrieve a list of available letter batches
 */
const getBatches = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/batch`,options
    );
  }

/**
 * Get details about a batch of letters
 * @summary Retrieve a batch of letters
 */
const getBatchId = <TData = AxiosResponse<LettersResponse>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/batch/${id}`,options
    );
  }

/**
 * Update the status of a batch of letters by providing the new status in the request body.
 * @summary Update the status of a batch of letters
 */
const patchLettersBatch = <TData = AxiosResponse<LetterBatchUpdateData>>(
    id: string,
    letterBatchUpdateData: LetterBatchUpdateData, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/batch/${id}`,
      letterBatchUpdateData,options
    );
  }

/**
 * @summary Update the status of multiple letters
 */
const postLetter = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/letter`,undefined,options
    );
  }

/**
 * Get details the status of a letter.
 * @summary Retrieve the status of a letter
 */
const getLetterStatus = <TData = AxiosResponse<LetterStatuData>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/letter/${id}`,options
    );
  }

/**
 * Update the status of a letter by providing the new status in the request body.
 * @summary Update the status of a letter
 */
const patchLetters = <TData = AxiosResponse<LetterUpdateData>>(
    id: string,
    letterUpdateData: LetterUpdateData, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/letter/${id}`,
      letterUpdateData,options
    );
  }

/**
 * @summary Get a list of cancelled letters
 */
const getCancellation = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/cancellation`,options
    );
  }

/**
 * @summary List MI records
 */
const listMi = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/mi`,options
    );
  }

/**
 * @summary Create a new MI record
 */
const createMi = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/mi`,undefined,options
    );
  }

/**
 * @summary Fetch a specific MI record
 */
const getMi = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/mi/${id}`,options
    );
  }

/**
 * @summary List specifications
 */
const listSpecification = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/specification`,options
    );
  }

/**
 * @summary Create a new specification record
 */
const createSpecification = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/specification`,undefined,options
    );
  }

/**
 * @summary Fetch metadata about a specific specification
 */
const getSpecification = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/specification/${id}`,options
    );
  }

/**
 * @summary Update metadata about a specific specification
 */
const patchSpecification = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/specification/${id}`,undefined,options
    );
  }

/**
 * @summary List proof files
 */
const listProof = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/proof`,options
    );
  }

/**
 * @summary Create a new proof metadata record
 */
const createProof = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/proof`,undefined,options
    );
  }

/**
 * @summary Fetch metadata about a specific proof file
 */
const getProof = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/proof/${id}`,options
    );
  }

/**
 * @summary Update metadata about a specific proof file
 */
const patchProof = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/proof/${id}`,undefined,options
    );
  }

/**
 * @summary List artwork files
 */
const listArtwork = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/artwork`,options
    );
  }

/**
 * @summary Create a new artwork metadata record
 */
const createArtwork = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/artwork`,undefined,options
    );
  }

/**
 * @summary Fetch metadata about a specific artwork file
 */
const getArtwork = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/artwork/${id}`,options
    );
  }

/**
 * @summary Update metadata about a specific artwork file
 */
const patchArtwork = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/artwork/${id}`,undefined,options
    );
  }

/**
 * @summary List batches of returned letters
 */
const listReturn = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/return`,options
    );
  }

/**
 * @summary Create a new returned letter batch
 */
const createReturn = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/return`,undefined,options
    );
  }

/**
 * @summary Fetch metadata about a specific return batch
 */
const getReturn = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/return/${id}`,options
    );
  }

/**
 * @summary Request a URL to upload a new data file
 */
const postData = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/data`,undefined,options
    );
  }

/**
 * @summary Fetch metadata about an existing data file
 */
const getData = <TData = AxiosResponse<unknown>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/data/${id}`,options
    );
  }

return {getBatches,getBatchId,patchLettersBatch,postLetter,getLetterStatus,patchLetters,getCancellation,listMi,createMi,getMi,listSpecification,createSpecification,getSpecification,patchSpecification,listProof,createProof,getProof,patchProof,listArtwork,createArtwork,getArtwork,patchArtwork,listReturn,createReturn,getReturn,postData,getData}};
export type GetBatchesResult = AxiosResponse<unknown>
export type GetBatchIdResult = AxiosResponse<LettersResponse>
export type PatchLettersBatchResult = AxiosResponse<LetterBatchUpdateData>
export type PostLetterResult = AxiosResponse<unknown>
export type GetLetterStatusResult = AxiosResponse<LetterStatuData>
export type PatchLettersResult = AxiosResponse<LetterUpdateData>
export type GetCancellationResult = AxiosResponse<unknown>
export type ListMiResult = AxiosResponse<unknown>
export type CreateMiResult = AxiosResponse<unknown>
export type GetMiResult = AxiosResponse<unknown>
export type ListSpecificationResult = AxiosResponse<unknown>
export type CreateSpecificationResult = AxiosResponse<unknown>
export type GetSpecificationResult = AxiosResponse<unknown>
export type PatchSpecificationResult = AxiosResponse<unknown>
export type ListProofResult = AxiosResponse<unknown>
export type CreateProofResult = AxiosResponse<unknown>
export type GetProofResult = AxiosResponse<unknown>
export type PatchProofResult = AxiosResponse<unknown>
export type ListArtworkResult = AxiosResponse<unknown>
export type CreateArtworkResult = AxiosResponse<unknown>
export type GetArtworkResult = AxiosResponse<unknown>
export type PatchArtworkResult = AxiosResponse<unknown>
export type ListReturnResult = AxiosResponse<unknown>
export type CreateReturnResult = AxiosResponse<unknown>
export type GetReturnResult = AxiosResponse<unknown>
export type PostDataResult = AxiosResponse<unknown>
export type GetDataResult = AxiosResponse<unknown>
