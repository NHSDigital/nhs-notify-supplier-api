name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
      pr_number:
        description: "PR Number if it exists"
        required: false
        type: string

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  artefact-jekyll-docs:
    name: "Build Docs"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build docs"
        uses: ./.github/actions/build-docs
        with:
          version: "${{ inputs.version }}"

  artefact-sdks:
    name: "Build SDKs"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build sdks"
        uses: ./.github/actions/build-sdk
        with:
          version: "${{ inputs.version }}"

  artefact-servers:
    name: "Build servers"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build servers"
        uses: ./.github/actions/build-server
        with:
          version: "${{ inputs.version }}"

  artefact-libs:
    name: "Build libs"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build servers"
        uses: ./.github/actions/build-libraries
        with:
          version: "${{ inputs.version }}"

  artefact-proxies:
    name: "Build proxies"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PROXYGEN_PRIVATE_KEY: ${{ secrets.PROXYGEN_ENCODED_NOTIFY_SUPPLIER_PRIVATE_KEY }}
      PROXYGEN_KID: notify-supplier-key-1
      PROXYGEN_CLIENT_ID: nhs-notify-supplier-client
      PROXYGEN_API_NAME: nhs-notify-supplier
      PR_NUMBER: ${{ inputs.pr_number }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build proxies"
        uses: ./.github/actions/build-proxies
        with:
          version: "${{ inputs.version }}"

  artefact-sandbox:
    name: "Build sandbox"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PROXYGEN_PRIVATE_KEY: ${{ secrets.PROXYGEN_ENCODED_NOTIFY_SUPPLIER_PRIVATE_KEY }}
      PROXYGEN_KID: notify-supplier-key-1
      PROXYGEN_CLIENT_ID: nhs-notify-supplier-client
      PROXYGEN_API_NAME: nhs-notify-supplier
      PR_NUMBER: ${{ inputs.pr_number }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Build sandbox"
        uses: ./.github/actions/build-sandbox
        with:
          version: "${{ inputs.version }}"

  # artefact-1:
  #   name: "Artefact 1"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v4
  #     - name: "Build artefact 1"
  #       run: |
  #         echo "Building artefact 1 ..."
  #     - name: "Check artefact 1"
  #       run: |
  #         echo "Checking artefact 1 ..."
  #     - name: "Upload artefact 1"
  #       run: |
  #         echo "Uploading artefact 1 ..."
  #         # Use either action/cache or action/upload-artifact
  # artefact-n:
  #   name: "Artefact n"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v4
  #     - name: "Build artefact n"
  #       run: |
  #         echo "Building artefact n ..."
  #     - name: "Check artefact n"
  #       run: |
  #         echo "Checking artefact n ..."
  #     - name: "Upload artefact n"
  #       run: |
  #         echo "Uploading artefact n ..."
  #         # Use either action/cache or action/upload-artifact
