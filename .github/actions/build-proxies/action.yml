name: "Build Proxies"
description: "Build Proxies"

inputs:
  version:
    description: "Version number"
    required: false
  releaseVersion:
    description: "Release, tag, branch, or commit ID to be used for deployment"
    required: true
  environment:
    description: "Deployment environment"
    required: true
  apimEnv:
    description: "APIM environment"
    required: true
  runId:
    description: "GitHub Actions run ID to fetch the OAS artifact from"
    required: true
  buildSandbox:
    description: "Whether to build the sandbox OAS spec"
    required: false
    default: false
  targetComponent:
    description: "Name of the Component to deploy"
    required: true
    default: 'api'

runs:
  using: composite

  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 24

    - name: Npm install
      working-directory: .
      run: npm ci
      shell: bash

    - name: Setup Proxy Name and target
      shell: bash
      run: |

        ENV="${{ inputs.apimEnv }}"
        if [[ "$ENV" == "internal-dev" || "$ENV" == *pr ]]; then
          echo "TARGET_DOMAIN=suppliers.dev.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
        elif [[ "$ENV" == "int" ]]; then
          echo "TARGET_DOMAIN=suppliers.nonprod.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
        elif [[ "$ENV" == "prod" ]]; then
          echo "TARGET_DOMAIN=suppliers.prod.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
        else
          echo "TARGET_DOMAIN=suppliers.dev.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
        fi

        if [ -z $PR_NUMBER ]
        then
          echo "INSTANCE=$PROXYGEN_API_NAME" >> $GITHUB_ENV
          echo "TARGET=https://main.$TARGET_DOMAIN" >> $GITHUB_ENV
          echo "SANDBOX_TAG=latest" >> $GITHUB_ENV
          echo "MTLS_NAME=notify-supplier-mtls" >> $GITHUB_ENV
        else
          echo "TARGET=https://pr$PR_NUMBER.$TARGET_DOMAIN" >> $GITHUB_ENV
          echo "INSTANCE=$PROXYGEN_API_NAME-PR-$PR_NUMBER" >> $GITHUB_ENV
          echo "SANDBOX_TAG=pr$PR_NUMBER" >> $GITHUB_ENV
          echo "MTLS_NAME=notify-supplier-mtls-pr$PR_NUMBER" >> $GITHUB_ENV
        fi

    - name: Build ${{ inputs.apimEnv }} oas
      working-directory: .
      env:
        APIM_ENV: ${{ inputs.apimEnv }}
      shell: bash
      run: |
        if [ ${{ env.APIM_ENV }} == "internal-dev-sandbox" ] && [ ${{ inputs.buildSandbox }} == true ]
        then
          echo "Building sandbox OAS spec"
          make build-json-oas-spec APIM_ENV=sandbox
        else
          echo "Building env specific OAS spec"
          make build-json-oas-spec APIM_ENV=${{ env.APIM_ENV }}
        fi

        if [[ $APIM_ENV == *-pr ]]; then
          echo "Removing pr suffix from APIM_ENV after building OAS and calling proxygen"
          APIM_ENV=$(echo "$APIM_ENV" | sed 's/-pr$//')
        fi
        echo "APIM_ENV=$APIM_ENV" >> $GITHUB_ENV

    - name: Upload OAS Spec
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APIM_ENV }}-build-output
        path: ./build

    - name: Trigger deploy proxy
      env:
        CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
        PEM_FILE: ${{ secrets.APP_PEM_FILE }}
      shell: bash
      run: |
        .github/scripts/dispatch_internal_repo_workflow.sh \
          --infraRepoName "nhs-notify-supplier-api" \
          --releaseVersion "${{ inputs.releaseVersion }}" \
          --targetComponent "${{ inputs.targetComponent }}" \
          --targetWorkflow "proxy-deploy.yaml" \
          --targetEnvironment "${{ inputs.environment }}" \
          --runId "${{ inputs.runId }}" \
          --buildSandbox ${{ inputs.buildSandbox }} \
          --apimEnvironment "${{ env.APIM_ENV }}" \
          --boundedContext "notify-supplier" \
          --targetDomain "$TARGET_DOMAIN" \
          --version "${{ inputs.version }}"
