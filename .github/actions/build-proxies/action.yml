name: "Build Proxies"
description: "Build Proxies"
inputs:
  version:
    description: "Version number"
    required: true
runs:
  using: composite

  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 24

    - name: Npm install
      working-directory: .
      run: npm ci
      shell: bash

    - name: Setup Proxy Name and target
      shell: bash
      run: |

        if [ -z $PR_NUMBER ]
        then
          echo "INSTANCE=$PROXYGEN_API_NAME" >> $GITHUB_ENV
          echo "TARGET=https://suppliers.dev.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
          echo "SANDBOX_TAG=latest" >> $GITHUB_ENV
        else
          echo "TARGET=https://pr$PR_NUMBER.suppliers.dev.nhsnotify.national.nhs.uk" >> $GITHUB_ENV
          echo "INSTANCE=$PROXYGEN_API_NAME-PR-$PR_NUMBER" >> $GITHUB_ENV
          echo "SANDBOX_TAG=pr$PR_NUMBER" >> $GITHUB_ENV
        fi


    - name: Install Proxygen client
      shell: bash
      run: |
        # Install proxygen cli
        pip install pipx
        pipx install proxygen-cli

        # Setup proxygen auth and settings
        mkdir -p ${HOME}/.proxygen
        echo -n $PROXYGEN_PRIVATE_KEY | base64 --decode > ${HOME}/.proxygen/key
        envsubst < ./.github/proxygen-credentials-template.yaml > ${HOME}/.proxygen/credentials.yaml
        envsubst < ./.github/proxygen-credentials-template.yaml | cat
        envsubst < ./.github/proxygen-settings.yaml > ${HOME}/.proxygen/settings.yaml
        envsubst < ./.github/proxygen-settings.yaml | cat

    - name: Build internal dev oas
      working-directory: .
      shell: bash
      run: |
        if [ -z $PR_NUMBER ]
        then
          make build-json-oas-spec APIM_ENV=dev
        else
          make build-json-oas-spec APIM_ENV=dev-pr
        fi

    - name: Set target
      shell: bash
      run: |
        jq --arg newurl "$TARGET" '.["x-nhsd-apim"].target.url = $newurl' build/notify-supplier.json > build/notify-supplier_target.json && mv build/notify-supplier_target.json build/notify-supplier.json


    - name: Deploy to Internal Dev
      shell: bash
      run: |
        proxygen instance deploy internal-dev $INSTANCE build/notify-supplier.json --no-confirm

    - name: Build sandbox oas
      working-directory: .
      shell: bash
      run: |
        make build-json-oas-spec APIM_ENV=sandbox

    - name: Set docker tag
      shell: bash
      run: |
        jq --arg newtag "$SANDBOX_TAG" '.["x-nhsd-apim"].target.containers[0].image.tag = $newtag' build/notify-supplier.json > build/notify-supplier_target.json && mv build/notify-supplier_target.json build/notify-supplier.json

    - name: Deploy to Internal Dev Sandbox
      shell: bash
      run: |
        proxygen instance deploy internal-dev-sandbox $INSTANCE build/notify-supplier.json --no-confirm
