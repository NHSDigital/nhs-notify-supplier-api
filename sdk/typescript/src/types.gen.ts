// This file is auto-generated by @hey-api/openapi-ts

export type DataReference = {
    /**
     * ID of a data file which can be requested from the /data/{id} endpoint
     */
    id: string;
    sha256: Sha256;
    signature: EcdsaSignature;
    key: EcdsaKey;
};

export type Letter = {
    messageId: string;
    fileName: string;
    sha256: Sha256;
};

export type ErrorResponse = {
    data?: ErrorData;
};

export type ErrorData = {
    errors?: Array<ErrorItem>;
};

export type ErrorItem = {
    id?: string;
    code?: 'NOTIFY_NO_BATCH_AVAILABLE' | 'NOTIFY_INTERNAL_SERVER_ERROR' | 'NOTIFY_INVALID_REQUEST' | 'NOTIFY_LETTER_NOT_FOUND';
    links?: {
        about?: string;
    };
    status?: string;
    title?: string;
    detail?: string;
};

export type BatchUpdateRequest = BatchUpdateData;

export type BatchUpdateData = {
    data?: {
        type?: 'Batch';
        id?: string;
        attributes?: {
            /**
             * New status to be applied to the batch of letters
             */
            status?: BatchStatus;
            /**
             * Reason code for the given status
             */
            reasonCode?: number;
            /**
             * Reason text for the given status
             */
            reasonText?: string;
        };
    };
};

export type BatchUpdateResponse = BatchUpdateData;

export type LetterUpdateRequest = LetterUpdateData;

export type LetterUpdateData = {
    data?: {
        type?: 'Letter';
        id?: string;
        attributes?: {
            status?: LetterStatus;
            /**
             * The requested production status for this letter.
             * May only be set by NHS Notify.
             */
            requestedProductionStatus?: ProductionStatus;
            /**
             * Reason code for the given status
             */
            reasonCode?: number;
            /**
             * Reason text for the given status
             */
            reasonText?: string;
        };
    };
};

export type LetterStatusData = {
    data?: {
        type?: 'Letter';
        id?: string;
        attributes?: {
            status: LetterStatus;
            requestedProductionStatus: ProductionStatus;
            /**
             * Reason code for the given status
             */
            reasonCode?: number;
            /**
             * Reason text for the given status
             */
            reasonText?: string;
        };
    };
};

/**
 * The supplier status of an individual letter
 */
export type LetterStatus = 'PENDING' | 'ACCEPTED' | 'REJECTED' | 'PRINTED' | 'ENCLOSED' | 'CANCELLED' | 'DISPATCHED' | 'FAILED' | 'RETURNED' | 'DESTROYED' | 'FORWARDED';

/**
 * The supplier status of a batch of letters
 */
export type BatchStatus = 'PENDING' | 'ACCEPTED' | 'REJECTED' | 'CANCELLED';

export type LetterStatusResponse = LetterStatusData;

/**
 * A requested status for the production of a letter
 */
export type ProductionStatus = 'ACTIVE' | 'HOLD' | 'CANCEL';

export type BatchResponse = {
    data: {
        type: 'Batch';
        id: string;
        attributes: Batch;
    };
};

/**
 * SHA 256 Hash of a file or other resource used to verify the expected content
 */
export type Sha256 = string;

/**
 * Public ECDSA Key corresponding to a signature used to verify the originator of a file. This public key should correspond to one published by NHS Notify.
 */
export type EcdsaKey = string;

/**
 * ECDSA Signature of a file or other resource used to verify the originator
 */
export type EcdsaSignature = string;

export type Batch = {
    status: BatchStatus;
    data?: DataReference;
    letters: Array<Letter>;
    reasonCode?: number;
    reasonText?: string;
};

/**
 * Unique request identifier, in the format of a GUID
 */
export type RequestId = string;

/**
 * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
 * The ID will be returned in a response header.
 */
export type CorrelationId = string;

/**
 * Unique identifier of this resource
 */
export type Id = string;

/**
 * Status of a letter
 */
export type Status = LetterStatus;

export type GetBatchesData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/batch';
};

export type GetBatchesResponses = {
    /**
     * OK
     */
    200: {
        links?: {
            self: string;
            first: string;
            last: string;
            prev?: string;
            next?: string;
        };
        data?: Array<{
            type: 'Batch';
            /**
             * ID of a batch which can be fetched from the /batch/{id} endpoint
             */
            id: string;
        }>;
    };
};

export type GetBatchesResponse = GetBatchesResponses[keyof GetBatchesResponses];

export type GetBatchIdData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/batch/{id}';
};

export type GetBatchIdErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Too many requests
     */
    429: ErrorResponse;
    /**
     * Server error
     */
    500: ErrorResponse;
};

export type GetBatchIdError = GetBatchIdErrors[keyof GetBatchIdErrors];

export type GetBatchIdResponses = {
    /**
     * Batch of letters found
     */
    200: BatchResponse;
};

export type GetBatchIdResponse = GetBatchIdResponses[keyof GetBatchIdResponses];

export type PatchLettersBatchData = {
    body: BatchUpdateRequest;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/batch/{id}';
};

export type PatchLettersBatchErrors = {
    /**
     * Bad request, invalid input data
     */
    400: ErrorResponse;
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Too many requests
     */
    429: ErrorResponse;
    /**
     * Server error
     */
    500: ErrorResponse;
};

export type PatchLettersBatchError = PatchLettersBatchErrors[keyof PatchLettersBatchErrors];

export type PatchLettersBatchResponses = {
    /**
     * Letters resources updated successfully
     */
    200: BatchUpdateResponse;
};

export type PatchLettersBatchResponse = PatchLettersBatchResponses[keyof PatchLettersBatchResponses];

export type GetAListOfLettersData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query: {
        /**
         * Status of a letter
         */
        status: LetterStatus;
    };
    url: '/letter';
};

export type PostLetterData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/letter';
};

export type GetLetterStatusData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/letter/{id}';
};

export type GetLetterStatusErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Too many requests
     */
    429: ErrorResponse;
    /**
     * Server error
     */
    500: ErrorResponse;
};

export type GetLetterStatusError = GetLetterStatusErrors[keyof GetLetterStatusErrors];

export type GetLetterStatusResponses = {
    /**
     * Letter status
     */
    200: LetterStatusData;
};

export type GetLetterStatusResponse = GetLetterStatusResponses[keyof GetLetterStatusResponses];

export type PatchLettersData = {
    body: LetterUpdateData;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/letter/{id}';
};

export type PatchLettersErrors = {
    /**
     * Bad request, invalid input data
     */
    400: ErrorResponse;
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Too many requests
     */
    429: ErrorResponse;
    /**
     * Server error
     */
    500: ErrorResponse;
};

export type PatchLettersError = PatchLettersErrors[keyof PatchLettersErrors];

export type PatchLettersResponses = {
    /**
     * Letter resource updated successfully
     */
    200: LetterStatusData;
};

export type PatchLettersResponse = PatchLettersResponses[keyof PatchLettersResponses];

export type ListMiData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/mi';
};

export type CreateMiData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/mi';
};

export type GetMiData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/mi/{id}';
};

export type ListWhitemailData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/whitemail';
};

export type CreateWhitemailData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/whitemail';
};

export type GetWhitemailData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/whitemail/{id}';
};

export type PostDataData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path?: never;
    query?: never;
    url: '/data';
};

export type GetDataIdData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/data/{id}';
};

export type HeadDataIdData = {
    body?: never;
    headers: {
        /**
         * Unique request identifier, in the format of a GUID
         */
        'X-Request-ID': string;
        /**
         * An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding `.` characters. If not provided in the request, NHS Notify will default to a system generated ID in its place.
         * The ID will be returned in a response header.
         */
        'X-Correlation-ID'?: string;
    };
    path: {
        /**
         * Unique identifier of this resource
         */
        id: string;
    };
    query?: never;
    url: '/data/{id}';
};

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:3000' | 'https://sandbox-server.nhs.uk/nhs-notify-supplier-api' | (string & {});
};
